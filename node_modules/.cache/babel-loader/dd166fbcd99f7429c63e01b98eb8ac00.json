{"remainingRequest":"/home/angger/Projects/VueJS/vue-adminlte/node_modules/babel-loader/lib/index.js!/home/angger/Projects/VueJS/vue-adminlte/node_modules/eslint-loader/index.js??ref--13-0!/home/angger/Projects/VueJS/vue-adminlte/src/store/modules/auth.js","dependencies":[{"path":"/home/angger/Projects/VueJS/vue-adminlte/src/store/modules/auth.js","mtime":1546328085911},{"path":"/home/angger/Projects/VueJS/vue-adminlte/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/angger/Projects/VueJS/vue-adminlte/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/angger/Projects/VueJS/vue-adminlte/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport axiosAuth from \"@/axios-auth\";\nimport router from \"@/router\";\nvar state = {\n  apiKey: \"AIzaSyAYQhAAuljgKrpXfsngjDZplNe09yuPziA\",\n  clientId: \"3\",\n  // clientId: \"4\", // for password grant\n  clientSecret: \"NCwtQFDNAeIgw2uLKETEdXK1EV7MrfoT545G43rL\",\n  // for password grant\n  oauthUri: \"http://localhost:8090/oauth/authorize\",\n  // stock-analyzer-auth\n  redirectUri: \"http://localhost/auth/callback\",\n  // stock-analyzer-client\n  logoutUri: \"http://localhost\",\n  // stock-analyzer-client\n  dashboardUri: \"http://localhost:8080\",\n  // stock-analyzer-client\n  tokenType: null,\n  token: null,\n  refreshToken: null,\n  expirationDate: null,\n  userId: null,\n  user: null,\n  loginSuccess: {\n    status: false,\n    message: \"\"\n  }\n};\nvar mutations = {\n  setAuthData: function setAuthData(state, data) {\n    // console.log(data);\n    // const token = data.idToken;\n    // const userId = data.localId;\n    // const user = { id: data.localId, email: data.email };\n    var tokenType = data.token_type;\n    var token = data.access_token;\n    var refreshToken = data.refresh_token !== undefined ? data.refresh_token : null;\n    var userId = null;\n    var user = null;\n    var expirationDate = null;\n\n    if (data.expirationDate !== undefined) {\n      expirationDate = data.expirationDate;\n    } else {\n      var now = new Date(); // expirationDate = new Date(now.getTime() + data.expiresIn * 1000);\n\n      expirationDate = new Date(now.getTime() + data.expires_in * 1000);\n    }\n\n    state.tokenType = tokenType;\n    state.token = token;\n    state.refreshToken = refreshToken;\n    state.expirationDate = expirationDate;\n    state.userId = userId;\n    state.user = user;\n    localStorage.setItem(\"tokenType\", tokenType);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"refreshToken\", refreshToken);\n    localStorage.setItem(\"expirationDate\", expirationDate);\n    localStorage.setItem(\"userId\", userId);\n    localStorage.setItem(\"user\", JSON.stringify(user));\n  },\n  clearAuthData: function clearAuthData(state) {\n    state.tokenType = null;\n    state.token = null;\n    state.refreshToken = null;\n    state.expirationDate = null;\n    state.userId = null;\n    state.user = null;\n    localStorage.clear();\n  },\n  setLoginSuccess: function setLoginSuccess(state, loginSuccess) {\n    state.loginSuccess = loginSuccess;\n  }\n};\nvar actions = {\n  cekLogin: function cekLogin(_ref) {\n    var commit = _ref.commit,\n        dispatch = _ref.dispatch,\n        getters = _ref.getters;\n\n    if (getters.isAuthenticated) {\n      dispatch(\"validateToken\");\n      var tokenType = localStorage.getItem(\"tokenType\");\n      var token = localStorage.getItem(\"token\");\n      var refreshToken = localStorage.getItem(\"refreshToken\");\n      var expirationDate = localStorage.getItem(\"expirationDate\");\n      var userId = localStorage.getItem(\"userId\");\n      var user = localStorage.getItem(\"user\");\n      commit(\"setAuthData\", {\n        token_type: tokenType,\n        access_token: token,\n        refresh_token: refreshToken,\n        expirationDate: expirationDate,\n        userId: userId,\n        user: user\n      }); // router.go({ path: \"/\", force: true });\n    } else {\n      router.go({\n        path: \"/login\",\n        force: true\n      });\n    }\n  },\n  callbackLogin: function callbackLogin(_ref2, query) {\n    var commit = _ref2.commit,\n        getters = _ref2.getters;\n\n    if (query.token_type !== undefined && query.expires_in !== undefined && query.access_token !== undefined) {\n      commit(\"setLoginSuccess\", {\n        success: true,\n        message: \"login success!\"\n      });\n      commit(\"setAuthData\", query); // router.push({ name: \"dashboard\" });\n      // router.go({ path: \"/dashboard\", force: true });\n\n      window.location.replace(getters.dashboardUri);\n    }\n  },\n  validateToken: function validateToken(_ref3) {\n    var getters = _ref3.getters;\n\n    if (getters.isAuthenticated) {\n      var tokenType = localStorage.getItem(\"tokenType\");\n      var token = localStorage.getItem(\"token\");\n      var headers = {\n        Accept: \"application/json\",\n        Authorization: tokenType + \" \" + token\n      };\n      axiosAuth.get(\"/api/validate-token\", {\n        headers: headers\n      }).then(function (response) {\n        var data = response.data;\n\n        if (data.valid !== undefined && data.valid == true) {} else {}\n      }).catch(function (error) {\n        var response = error.response;\n\n        if (response.status == 401) {// token salah / expired\n        }\n      });\n    }\n  },\n  // doLogin({ commit, state }, { email, password }) {\n  // \taxiosAuth\n  // \t\t.post(\"/oauth/token\", {\n  // \t\t\tgrant_type: \"password\",\n  // \t\t\tclient_id: state.clientId,\n  // \t\t\tclient_secret: state.clientSecret,\n  // \t\t\tusername: email,\n  // \t\t\tpassword: password,\n  // \t\t\tscope: \"\"\n  // \t\t})\n  // \t\t.then(response => {\n  // \t\t\t// console.log(response);\n  // \t\t\tcommit(\"setLoginSuccess\", {\n  // \t\t\t\tsuccess: true,\n  // \t\t\t\tmessage: \"login success!\"\n  // \t\t\t});\n  // \t\t\tcommit(\"setAuthData\", response.data);\n  // \t\t\trouter.go({ path: \"/\", force: true });\n  // \t\t})\n  // \t\t.catch(error => {\n  // \t\t\t// console.error(error);\n  // \t\t\tcommit(\"setLoginSuccess\", {\n  // \t\t\t\tsuccess: false,\n  // \t\t\t\tmessage: error.response.data.message,\n  // \t\t\t\terror: error.response.data.error\n  // \t\t\t});\n  // \t\t});\n  // },\n  // doLogin({ commit, state }, { email, password }) {\n  // \taxiosAuth\n  // \t\t.post(\"/verifyPassword?key=\" + state.apiKey, {\n  // \t\t\temail,\n  // \t\t\tpassword,\n  // \t\t\treturnSecureToken: true\n  // \t\t})\n  // \t\t.then(response => {\n  // \t\t\tcommit(\"setLoginSuccess\", {\n  // \t\t\t\tsuccess: true,\n  // \t\t\t\tmessage: \"login success!\"\n  // \t\t\t});\n  // \t\t\tcommit(\"setAuthData\", response.data);\n  // \t\t\trouter.go({ path: \"/\", force: true });\n  // \t\t})\n  // \t\t.catch(error => {\n  // \t\t\tcommit(\"setLoginSuccess\", {\n  // \t\t\t\tsuccess: false,\n  // \t\t\t\tmessage: error + \"@\" + new Date().getTime(),\n  // \t\t\t\terror: error.response\n  // \t\t\t});\n  // \t\t\tconst errorResponse = error.response;\n  // \t\t\tif (errorResponse.status == 400) {\n  // \t\t\t\trouter.replace({\n  // \t\t\t\t\tpath: \"/login\",\n  // \t\t\t\t\tquery: { error: errorResponse.data.error.message }\n  // \t\t\t\t});\n  // \t\t\t} else {\n  // \t\t\t\tconsole.error(error);\n  // \t\t\t}\n  // \t\t});\n  // },\n  doLogout: function doLogout(_ref4) {\n    var commit = _ref4.commit,\n        getters = _ref4.getters;\n    commit(\"clearAuthData\"); // router.go({ path: \"/\", force: true });\n\n    window.location.replace(getters.logoutUri);\n  }\n};\nvar getters = {\n  apiKey: function apiKey(state) {\n    return state.apiKey;\n  },\n  clientId: function clientId(state) {\n    return state.clientId;\n  },\n  clientSecret: function clientSecret(state) {\n    return state.clientSecret;\n  },\n  oauthUri: function oauthUri(state) {\n    return state.oauthUri;\n  },\n  redirectUri: function redirectUri(state) {\n    return state.redirectUri;\n  },\n  dashboardUri: function dashboardUri(state) {\n    return state.dashboardUri;\n  },\n  logoutUri: function logoutUri(state) {\n    return state.logoutUri;\n  },\n  tokenType: function tokenType(state) {\n    return state.tokenType;\n  },\n  token: function token(state) {\n    return state.token;\n  },\n  refreshToken: function refreshToken(state) {\n    return state.refreshToken;\n  },\n  userId: function userId(state) {\n    return state.userId;\n  },\n  user: function user(state) {\n    return state.user;\n  },\n  isAuthenticated: function isAuthenticated(state) {\n    // cek token exists\n    var token = localStorage.getItem(\"token\");\n\n    if (!token) {\n      // token not exists\n      return false;\n    } // cek expiration date\n\n\n    var expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n    var now = new Date();\n\n    if (now >= expirationDate) {\n      // token expired\n      return false;\n    } // user logged in\n\n\n    var userId = localStorage.getItem(\"userId\");\n    var user = JSON.parse(localStorage.getItem(\"user\"));\n    return true;\n  },\n  loginSuccess: function loginSuccess(state) {\n    return state.loginSuccess;\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};",{"version":3,"sources":["/home/angger/Projects/VueJS/vue-adminlte/src/store/modules/auth.js"],"names":["axiosAuth","router","state","apiKey","clientId","clientSecret","oauthUri","redirectUri","logoutUri","dashboardUri","tokenType","token","refreshToken","expirationDate","userId","user","loginSuccess","status","message","mutations","setAuthData","data","token_type","access_token","refresh_token","undefined","now","Date","getTime","expires_in","localStorage","setItem","JSON","stringify","clearAuthData","clear","setLoginSuccess","actions","cekLogin","commit","dispatch","getters","isAuthenticated","getItem","go","path","force","callbackLogin","query","success","window","location","replace","validateToken","headers","Accept","Authorization","get","then","response","valid","catch","error","doLogout","parse","namespaced"],"mappings":"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","sourcesContent":["import axiosAuth from \"@/axios-auth\";\nimport router from \"@/router\";\n\nconst state = {\n\tapiKey: \"AIzaSyAYQhAAuljgKrpXfsngjDZplNe09yuPziA\",\n\tclientId: \"3\",\n\t// clientId: \"4\", // for password grant\n\tclientSecret: \"NCwtQFDNAeIgw2uLKETEdXK1EV7MrfoT545G43rL\", // for password grant\n\toauthUri: \"http://localhost:8090/oauth/authorize\", // stock-analyzer-auth\n\tredirectUri: \"http://localhost/auth/callback\", // stock-analyzer-client\n\tlogoutUri: \"http://localhost\", // stock-analyzer-client\n\tdashboardUri: \"http://localhost:8080\", // stock-analyzer-client\n\ttokenType: null,\n\ttoken: null,\n\trefreshToken: null,\n\texpirationDate: null,\n\tuserId: null,\n\tuser: null,\n\tloginSuccess: {\n\t\tstatus: false,\n\t\tmessage: \"\"\n\t}\n};\n\nconst mutations = {\n\tsetAuthData(state, data) {\n\t\t// console.log(data);\n\t\t// const token = data.idToken;\n\t\t// const userId = data.localId;\n\t\t// const user = { id: data.localId, email: data.email };\n\t\tconst tokenType = data.token_type;\n\t\tconst token = data.access_token;\n\t\tconst refreshToken =\n\t\t\tdata.refresh_token !== undefined ? data.refresh_token : null;\n\t\tconst userId = null;\n\t\tconst user = null;\n\t\tlet expirationDate = null;\n\n\t\tif (data.expirationDate !== undefined) {\n\t\t\texpirationDate = data.expirationDate;\n\t\t} else {\n\t\t\tconst now = new Date();\n\t\t\t// expirationDate = new Date(now.getTime() + data.expiresIn * 1000);\n\t\t\texpirationDate = new Date(now.getTime() + data.expires_in * 1000);\n\t\t}\n\n\t\tstate.tokenType = tokenType;\n\t\tstate.token = token;\n\t\tstate.refreshToken = refreshToken;\n\t\tstate.expirationDate = expirationDate;\n\t\tstate.userId = userId;\n\t\tstate.user = user;\n\n\t\tlocalStorage.setItem(\"tokenType\", tokenType);\n\t\tlocalStorage.setItem(\"token\", token);\n\t\tlocalStorage.setItem(\"refreshToken\", refreshToken);\n\t\tlocalStorage.setItem(\"expirationDate\", expirationDate);\n\t\tlocalStorage.setItem(\"userId\", userId);\n\t\tlocalStorage.setItem(\"user\", JSON.stringify(user));\n\t},\n\tclearAuthData(state) {\n\t\tstate.tokenType = null;\n\t\tstate.token = null;\n\t\tstate.refreshToken = null;\n\t\tstate.expirationDate = null;\n\t\tstate.userId = null;\n\t\tstate.user = null;\n\n\t\tlocalStorage.clear();\n\t},\n\tsetLoginSuccess(state, loginSuccess) {\n\t\tstate.loginSuccess = loginSuccess;\n\t}\n};\n\nconst actions = {\n\tcekLogin({ commit, dispatch, getters }) {\n\t\tif (getters.isAuthenticated) {\n\t\t\tdispatch(\"validateToken\");\n\n\t\t\tconst tokenType = localStorage.getItem(\"tokenType\");\n\t\t\tconst token = localStorage.getItem(\"token\");\n\t\t\tconst refreshToken = localStorage.getItem(\"refreshToken\");\n\t\t\tconst expirationDate = localStorage.getItem(\"expirationDate\");\n\t\t\tconst userId = localStorage.getItem(\"userId\");\n\t\t\tconst user = localStorage.getItem(\"user\");\n\n\t\t\tcommit(\"setAuthData\", {\n\t\t\t\ttoken_type: tokenType,\n\t\t\t\taccess_token: token,\n\t\t\t\trefresh_token: refreshToken,\n\t\t\t\texpirationDate,\n\t\t\t\tuserId,\n\t\t\t\tuser\n\t\t\t});\n\n\t\t\t// router.go({ path: \"/\", force: true });\n\t\t} else {\n\t\t\trouter.go({ path: \"/login\", force: true });\n\t\t}\n\t},\n\tcallbackLogin({ commit, getters }, query) {\n\t\tif (\n\t\t\tquery.token_type !== undefined &&\n\t\t\tquery.expires_in !== undefined &&\n\t\t\tquery.access_token !== undefined\n\t\t) {\n\t\t\tcommit(\"setLoginSuccess\", {\n\t\t\t\tsuccess: true,\n\t\t\t\tmessage: \"login success!\"\n\t\t\t});\n\t\t\tcommit(\"setAuthData\", query);\n\n\t\t\t// router.push({ name: \"dashboard\" });\n\t\t\t// router.go({ path: \"/dashboard\", force: true });\n\t\t\twindow.location.replace(getters.dashboardUri);\n\t\t}\n\t},\n\tvalidateToken({ getters }) {\n\t\tif (getters.isAuthenticated) {\n\t\t\tconst tokenType = localStorage.getItem(\"tokenType\");\n\t\t\tconst token = localStorage.getItem(\"token\");\n\n\t\t\tconst headers = {\n\t\t\t\tAccept: \"application/json\",\n\t\t\t\tAuthorization: tokenType + \" \" + token\n\t\t\t};\n\n\t\t\taxiosAuth\n\t\t\t\t.get(\"/api/validate-token\", { headers })\n\t\t\t\t.then(response => {\n\t\t\t\t\tconst data = response.data;\n\t\t\t\t\tif (data.valid !== undefined && data.valid == true) {\n\t\t\t\t\t} else {\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconst response = error.response;\n\t\t\t\t\tif (response.status == 401) {\n\t\t\t\t\t\t// token salah / expired\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t},\n\t// doLogin({ commit, state }, { email, password }) {\n\t// \taxiosAuth\n\t// \t\t.post(\"/oauth/token\", {\n\t// \t\t\tgrant_type: \"password\",\n\t// \t\t\tclient_id: state.clientId,\n\t// \t\t\tclient_secret: state.clientSecret,\n\t// \t\t\tusername: email,\n\t// \t\t\tpassword: password,\n\t// \t\t\tscope: \"\"\n\t// \t\t})\n\t// \t\t.then(response => {\n\t// \t\t\t// console.log(response);\n\t// \t\t\tcommit(\"setLoginSuccess\", {\n\t// \t\t\t\tsuccess: true,\n\t// \t\t\t\tmessage: \"login success!\"\n\t// \t\t\t});\n\t// \t\t\tcommit(\"setAuthData\", response.data);\n\t// \t\t\trouter.go({ path: \"/\", force: true });\n\t// \t\t})\n\t// \t\t.catch(error => {\n\t// \t\t\t// console.error(error);\n\t// \t\t\tcommit(\"setLoginSuccess\", {\n\t// \t\t\t\tsuccess: false,\n\t// \t\t\t\tmessage: error.response.data.message,\n\t// \t\t\t\terror: error.response.data.error\n\t// \t\t\t});\n\t// \t\t});\n\t// },\n\t// doLogin({ commit, state }, { email, password }) {\n\t// \taxiosAuth\n\t// \t\t.post(\"/verifyPassword?key=\" + state.apiKey, {\n\t// \t\t\temail,\n\t// \t\t\tpassword,\n\t// \t\t\treturnSecureToken: true\n\t// \t\t})\n\t// \t\t.then(response => {\n\t// \t\t\tcommit(\"setLoginSuccess\", {\n\t// \t\t\t\tsuccess: true,\n\t// \t\t\t\tmessage: \"login success!\"\n\t// \t\t\t});\n\t// \t\t\tcommit(\"setAuthData\", response.data);\n\t// \t\t\trouter.go({ path: \"/\", force: true });\n\t// \t\t})\n\t// \t\t.catch(error => {\n\t// \t\t\tcommit(\"setLoginSuccess\", {\n\t// \t\t\t\tsuccess: false,\n\t// \t\t\t\tmessage: error + \"@\" + new Date().getTime(),\n\t// \t\t\t\terror: error.response\n\t// \t\t\t});\n\t// \t\t\tconst errorResponse = error.response;\n\t// \t\t\tif (errorResponse.status == 400) {\n\t// \t\t\t\trouter.replace({\n\t// \t\t\t\t\tpath: \"/login\",\n\t// \t\t\t\t\tquery: { error: errorResponse.data.error.message }\n\t// \t\t\t\t});\n\t// \t\t\t} else {\n\t// \t\t\t\tconsole.error(error);\n\t// \t\t\t}\n\t// \t\t});\n\t// },\n\tdoLogout({ commit, getters }) {\n\t\tcommit(\"clearAuthData\");\n\t\t// router.go({ path: \"/\", force: true });\n\t\twindow.location.replace(getters.logoutUri);\n\t}\n};\n\nconst getters = {\n\tapiKey: state => state.apiKey,\n\tclientId: state => state.clientId,\n\tclientSecret: state => state.clientSecret,\n\toauthUri: state => state.oauthUri,\n\tredirectUri: state => state.redirectUri,\n\tdashboardUri: state => state.dashboardUri,\n\tlogoutUri: state => state.logoutUri,\n\ttokenType: state => state.tokenType,\n\ttoken: state => state.token,\n\trefreshToken: state => state.refreshToken,\n\tuserId: state => state.userId,\n\tuser: state => state.user,\n\tisAuthenticated: state => {\n\t\t// cek token exists\n\t\tconst token = localStorage.getItem(\"token\");\n\t\tif (!token) {\n\t\t\t// token not exists\n\t\t\treturn false;\n\t\t}\n\n\t\t// cek expiration date\n\t\tconst expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n\t\tconst now = new Date();\n\t\tif (now >= expirationDate) {\n\t\t\t// token expired\n\t\t\treturn false;\n\t\t}\n\n\t\t// user logged in\n\t\tconst userId = localStorage.getItem(\"userId\");\n\t\tconst user = JSON.parse(localStorage.getItem(\"user\"));\n\n\t\treturn true;\n\t},\n\tloginSuccess: state => state.loginSuccess\n};\n\nexport default {\n\tnamespaced: true,\n\tstate,\n\tmutations,\n\tactions,\n\tgetters\n};\n"]}]}